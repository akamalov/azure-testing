---
- name: Test azure_rm_storageblob
  hosts: localhost
  vars:
      debug_mode: yes
  tasks:
      - name: Remove log file
        file:
           name: azure_rm_storageblob.log
           state: absent

      - name: Remove log file
        file:
           name: azure_rm_resourcegroup.log
           state: absent

      - name: Remove log file
        file:
           name: azure_rm_storageaccount.log
           state: absent

      - name: Create resource group
        azure_rm_resourcegroup:
            name: testgroup01
            location: eastus
            state: present
            debug: yes

      - name: Create storage account
        azure_rm_storageaccount:
            resource_group: testgroup01
            location: eastus
            name: testgroup01blobs
            account_type: Standard_LRS
            state: present
            debug: yes

      - name: Create container
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs 
            container_name: my-blobs
            mode: create
            debug: yes
        register: create_facts

      - debug: var=create_facts
        when: debug_mode

      - assert: { that: "create_facts['container']['etag'] is defined" }

      - name: Update container set access to container
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs 
            container_name: my-blobs
            x_ms_blob_public_access: private
            mode: update
            debug: yes
        register: update_facts    

      - debug: var=update_facts
        when: debug_mode

      - assert: { that: "update_facts['changed'] == True" }

      - name: Update container set signed permissions  
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            permissions: rw
            hours: 12 
            mode: update
            debug: yes
        register: update_facts

      - debug: var=update_facts
        when: debug_mode

      - assert: { that: "'{{ update_facts.container.permissions[0].id }}' == 'my-blobs-rw'" }

      - name: Force upload blob
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            mode: put
            blob_name: 'Ratings.png'
            file_path: './files/Ratings.png'
            x_ms_blob_content_type: image/png
            x_ms_meta_name_values:
                val1: foo
                val2: bar
            debug: yes
            force: always 
        register: upload_facts 

      - debug: var=upload_facts
        when: debug_mode

      - assert: { that: "upload_facts['changed'] == True" }

      - name: Upload blob
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            mode: put
            blob_name: 'Ratings.png'
            file_path: './files/Ratings.png'
            debug: yes
            overwrite: different
        register: upload_facts 

      - assert: { that: "upload_facts['changed'] == False" }

      - name: Make url for Ratings.png  
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            mode: get_url 
            blob_name: 'Ratings.png'
            debug: yes
        register: make_url_facts 

      - debug: var=make_url_facts
        when: debug_mode

      - name: List blobs
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            mode: list
            debug: yes
        register: list_facts

      - debug: var=list_facts
        when: debug_mode

      - name: Get token
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs  
            blob_name: 'Ratings.png'
            mode: get_token
            hours: 24
            permissions: 'rwd'
            debug: yes
        register: access_token

      - debug: var=access_token
        when: debug_mode

      - assert: { that: "access_token['access_token'] is defined" }

      - name: Generate secure URL
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            blob_name: 'Ratings.png' 
            mode: get_url
            access_token: "{{ access_token['access_token'] }}"
        register: secure_access

      - assert: { that: "secure_access['url'] is defined" }

      - name: Should not download file 
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            blob_name: 'Ratings.png'
            mode: get
            file_path: './files/Ratings.png'
            overwrite: never
        register: download_results

      - debug: var=download_results 
        when: debug_mode

      - assert: { that: "'identical' in  download_results['msg']" }

      - file: path="/tmp/Ratings.png" state=absent

      - name: Should download file 
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: my-blobs
            blob_name: 'Ratings.png'
            mode: get
            file_path: '/tmp/Ratings.png'
            overwrite: always
        register: download_results

      - assert: { that: "download_results['changed'] == True" }

      - find: paths='/tmp' patterns="Ratings.png"
        register: find_results

      - assert: { that: "find_results['matched'] == 1" }

      - name: Create a container with an object
        azure_rm_storageblob:
            resource_group: testgroup01 
            account_name: testgroup01blobs 
            container_name: newcontainer
            blob_name: graylog.png
            file_path: './files/graylog.png'
            mode: put
        register: new_container

      - name: List contents of new container
        azure_rm_storageblob:
            resource_group: testgroup01 
            account_name: testgroup01blobs 
            container_name: newcontainer
            mode: list
        register: new_contents

      # if we're re-running the test, there may actually be 2 files in the container
      - assert: { that: "{{ new_contents.blobs | length }} >= 1 " }

      - name: Upload file to new container
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: newcontainer
            blob_name: Ratings.png
            file_path: './files/Ratings.png'
            mode: put
        register: new_container
      
      - name: List contents of new container
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: newcontainer
            mode: list
        register: new_contents

      - assert: { that: "{{ new_contents.blobs | length }} == 2" }
      
      - name: Delete blob object
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: newcontainer
            mode: delete_blob
            blob_name: Ratings.png

      - name: List contents of new container
        azure_rm_storageblob:
            resource_group: testgroup01
            account_name: testgroup01blobs
            container_name: newcontainer
            mode: list
        register: new_contents
      
      - assert: { that: "{{ new_contents.blobs | length }} == 1" }

      - name: Delete new container
        azure_rm_storageblob:
            resource_group: testgroup01 
            account_name: testgroup01blobs 
            container_name: newcontainer
            mode: delete

      - name: Delete resource group
        azure_rm_resourcegroup:
            name: testgroup01
            location: eastus
            state: absent
